{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/test.service.ts","webpack:///src/app/view/view-component/view-component.component.ts","webpack:///src/app/view/view-component/view-component.component.html","webpack:///src/app/view/view.module.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","svc","http","printToConsole","selector","templateUrl","styleUrls","AppModule","declarations","imports","providers","bootstrap","TestService","arg","console","log","providedIn","ViewComponentComponent","get","subscribe","response","cases","ViewModule","environment","production","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\nimport { TestService } from './test.service';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n    \n  constructor(private svc: TestService, private http: HttpClient){\n        svc.printToConsole(2+3)\n  }\n\n  ngOnInit(){\n    \n  }\n}\n","<app-view-component></app-view-component>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AppComponent } from './app.component';\nimport { ViewModule } from './view/view.module';\nimport { TestService } from './test.service';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    ViewModule,\n    HttpClientModule\n  ],\n  providers: [\n    TestService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TestService {\n\n  constructor() { \n    \n  }\n  printToConsole(arg){\n    console.log(arg);\n  }\n}","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { TestService } from 'src/app/test.service';\n\n@Component({\n  selector: 'app-view-component',\n  templateUrl: './view-component.component.html',\n  styleUrls: ['./view-component.component.css']\n})\nexport class ViewComponentComponent implements OnInit {\n  userName: string;\n  cases: any;\n\n  constructor(private http : HttpClient, private svc : TestService) {   \n\n  }\n\n  ngOnInit(){\n    this.http.get('https://api.covid19india.org/data.json').subscribe(\n        (response) => this.svc.printToConsole(this.cases = response)\n      );    \n  }\n\n  getUserDetails(){\n  }\n}\n","<div>\n    <table #dataTable class=\"display\" style=\"width:100%\" *ngIf=\"cases\">\n        <tr>\n            <th>STATE</th>\n            <th>CONFIRMED</th>\n            <th>ACTIVE</th>\n            <th>RECOVERED</th>\n            <th>DECEASED</th>\n        </tr>\n        <tr *ngFor=\"let case of cases.statewise\">\n            <td>{{case.state}}</td>\n            <td>{{case.confirmed}}</td>\n            <td>{{case.active}}</td>\n            <td>{{case.recovered}}</td>\n            <td>{{case.deaths}}</td>\n        </tr>\n    </table>\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { ViewComponentComponent } from './view-component/view-component.component';\n\n\n\n@NgModule({\n  declarations: [ViewComponentComponent],\n  imports: [\n    CommonModule,\n    FormsModule\n  ],\n  exports:[\n    ViewComponentComponent\n  ]\n})\nexport class ViewModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}